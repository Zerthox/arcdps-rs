searchState.loadedDescShard("evtc", 0, "Bindings for the ArcDPS EVTC API.\nDelayed combat event.\nArcDPS build information.\nAgent is an attack target of parent gadget.\nAgent barrier change.\nBreakbar percentage.\nAgent breakbar state change.\nBuff formula.\nBuff information.\nInitially present buffs.\nAgent is now dead.\nAgent is now downed.\nAgent is now alive.\nSource agent is no longer being tracked or out of game …\nVisual effect created or ended.\nRetired since 230716.\nAgent entered combat.\nAgent left combat.\nA custom event created by an extension (addon/plugin).\nA custom combat event created by an extension …\nAgent facing change.\nFractal scale.\nGame build.\nAgent gliding state change.\nAgent is in guild.\nAgent health change.\nContent id to GUID.\nUsed internally by ArcDPS. Should not appear anywhere.\nMap instance start timestamp.\nMessage with log integrity information.\nGW2 client language.\nGame text language.\nAn iterator over the variants of Language\nRetired since 230716.\nLog boss agent changed.\nMap id.\nAgent has a marker.\nAgent maximum health change.\nNot used, different kind of event.\nPlayer recording the log.\nAgent position change.\nTick rate health.\nUsed internally by ArcDPS. Should not appear anywhere.\nSource agent got a reward chest.\nCombat ruleset.\nSever shard id.\nSkill information.\nSkill action.\nAgent is now in game tracking range.\nSquad combat end, last player has left combat. Logging has …\nSquad combat start, first player entered combat. Logging …\nSquad ground marker placed or removed.\nBuff stack is now active.\nBuff stack duration changed.\nArc UI stats reset.\nCombat state change kinds.\nAn iterator over the variants of StateChange\nAgent changed targetable state.\nAgent team change.\nUnknown or invalid.\nAgent velocity change.\nAgent swapped weapon set.\nAgent bindings &amp; utilities.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBuff bindings &amp; utilities.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nEffect bindings &amp; utilities.\nGet a flags value with all bits unset.\nEvent bindings &amp; utilities.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nInterfaces for extracting information from events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nChecks whether the statechange has an associated timestamp.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nMarker bindings &amp; utilities.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nPlayer bindings &amp; utilities.\nBindings &amp; utilities for the game’s 3d space.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSkill bindings &amp; utilities.\nBindings &amp; utilities for any form of strikes (direct …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBindings &amp; utilities for agent weapon sets.\nDefiance bar active.\nWhether the agent is an ally or enemy.\nAn iterator over the variants of Affinity\nIds for an agent.\nPossible agent kinds.\nAn iterator over the variants of AgentKind\nSimple event regarding an agent.\nAgent is now an attack target.\nAgent barrier percent change.\nBreakbar percent change.\nBreakbar (defiance bar) states.\nBreakbar state change.\nAn iterator over the variants of BreakbarState\nConversion ratio.\nConversion ratio.\nAgent down contribution event (retired).\nAgent entered combat.\nEnemy agent.\nAllied agent.\nAgent is a gadget.\nAgent gliding state change.\nAgent health percent change.\nDefiance bar immune.\nInvalid.\nAgent max health change.\nNo defiance.\nAgent is an NPC.\nAgent is a player.\nDefiance bar recovering.\nAgent targetable state change.\nAgent team change.\nUnknown affinity between agents.\nUnknown state.\nAgent that is an attack target.\nAgent changing breakbar state.\nAgent that had their breakbar health changed.\nAgent that entered combat.\nAgent that changed gliding state.\nAgent that had their max health changed.\nAgent that had their health percent changed.\nAgent that had their current barrier changed.\nAgent that the status change happened to.\nAgent that entered downed state.\nAgent that had their targetable state changed.\nAgent that had their team changed.\nCurrent barrier percent with <code>1.0</code> being max.\nAgent elite specialization.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates new agent id information from the <code>Event</code> …\nCreates new agent id information from the <code>Event</code> source …\nReturns whether the agent has a master.\nNew breakbar health in percent.\nCurrent health percent with <code>1.0</code> being max.\nAgent id as assigned by Arc.\nInstance id of the agent as appears in game at time of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf agent has a master (e.g. is minion), will be equal to …\nNew agent max health.\nDetermines the kind of agent for the given profession and …\nCreates new agent id information.\nParent gadget agent.\nAgent profession.\nRealtime API <code>Agent</code> types.\nNew breakbar state.\nAgent subgroup.\nCurrent targetable state.\nNew targetable state.\nNew team id.\nTime of registering the attack target.\nTime of registering the breakbar state change.\nTime of registering the breakbar health change.\nTime of registering the combat enter.\nTime of registering the gliding state.\nTime of registering the max health change.\nTime of registering the health percent change.\nTime of registering the barrier change.\nTime of registering the status change.\nTime of registering the downed state.\nTime of registering the targetable state change.\nTime of registering the team change.\nTime since last 90% HP in milliseconds.\nCreates new agent id information without a master.\nRepresents an agent in a realtime combat event.\n<code>Agent</code> with an owned <code>String</code> name.\nElite (specialization) of the agent.\nElite (specialization) of the agent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUnique id.\nUnique id.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the agent is self (the local player).\nWhether the agent is self (the local player).\nDetermines the kind of agent.\nReturns the agent’s name.\nName of the agent.\nReturns the raw pointer to the agent’s name.\nProfession of the agent.\nProfession of the agent.\nTeam the agent is in.\nTeam the agent is in.\nConverts the <code>Agent</code> to the owned version <code>AgentOwned</code>.\nAgony Resistance.\nLast or all stacks removed.\nLast or all stacks removed.\nBuff is generic category.\nBuff is generic category.\nNew stack applied or existing stack replaced.\nArmor.\nAttack speed.\nAttributes for buff formulas.\nAn iterator over the variants of Attribute\nBuff is a Boon.\nBuff is a Boon.\nBuff is granted by a Boost consumable.\nBuff is granted by a Boost consumable.\nBuff apply event.\nBuff apply behavior.\nAn iterator over the variants of BuffApplyKind\nBuff info category <strong>after</strong> 13 December 2022.\nBuff info category <strong>before</strong> 13 December 2022.\nCombat buff cycle.\nAn iterator over the variants of BuffCycle\nBuff damage event.\nBuff damage tick results.\nAn iterator over the variants of BuffDamageResult\nBuff formula from an <code>Event</code> with <code>StateChange::BuffFormula</code>.\nBuff information from an <code>Event</code> with <code>StateChange::BuffInfo</code>.\nBuff initial event.\nCombat buff remove.\nBuff remove event.\nAn iterator over the variants of BuffRemove\nKind of buff remove.\nAn iterator over the variants of BuffRemoveKind\nBuff stacking behavior.\nAn iterator over the variants of BuffStackType\nStacking in duration with cap.\nConcentration.\nOutgoing condition damage.\nIncoming condition damage.\nCondition Damage.\nBuff is a Condition.\nBuff is a Condition.\nDamage happened on tick timer.\nBuff is Enhancement granted by a Utility consumable.\nBuff is Enhancement granted by a Utility consumable.\nExpertise.\nExisting stack extended.\nFerocity.\nBuff is granted by Food consumable.\nBuff is granted by Food consumable.\nNo stacking. Force override.\nHealing.\nExpected to hit.\nTarget invulnerable by buff.\nTarget invulnerable by player skill.\nTarget invulnerable by player skill.\nTarget invulnerable by player skill.\nSingle stack removed.\nSingle stack removed.\nNot used, different kind of event.\nDamage happened outside tick timer (resistable).\nDamage happened to source on hitting target.\nDamage happened to target on hitting target.\nDamage happened to target on source losing a stack.\nRetired since May 2021.\nOutgoing strike damage.\nIncoming strike damage.\nPower.\nPrecision.\nStacking in duration with queue.\nBuff formula from an <code>Event</code> with <code>StateChange::BuffFormula</code>.\nRegeneration-like stacking in duration.\nSingle stack removed.\nSingle stack removed.\nOutgoing life leech.\nIncoming life leech.\nActive buff stack change.\nBuff stack reset.\nStacking in intensity.\nStacking in intensity with conditional loss.\nBuff is a Stance.\nBuff is a Stance.\nStat increase.\nToughness.\nBuff is granted by a Trait.\nBuff is granted by a Trait.\nBuff is a Transform.\nBuff is a Transform.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nBuff is a gear item or upgrade.\nBuff is granted by gear item or upgrade.\nVitality.\nAgent that had their active buff stack changed.\nAgent that the stack reset happened to.\nKind of buff application/extension.\nBuff.\nThe category of buff.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nWhether damage happened on tick (cycle) or reactively …\nBuff damage amount.\nCurrent remaining duration.\nCurrent buff duration.\nNew duration to reset to.\nMaximum buff duration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProbably invert.\nProbably invulnerable.\nWhether the buff formula is always active.\nWhether the buff formula is always active.\nMaximum amount of stacks.\nOriginal full duration.\nKind of buff remove.\nRemoved buff(s) as duration.\nRemoved buff(s) as intensity.\nProbably resistance.\nResult of buff damage.\nBuff skill id.\nStack active status.\nWhether stack is active.\nBuff stack (instance) id.\nBuff stack (instance) id.\nStack id of new active stack.\nStack id.\nBuff stacking behavior.\nTime of registering the active buff stack change.\nTime of registering the stack reset.\nApplied duration.\nDuration change.\nNew stack duration.\nDuration of removed stack, if any.\nStack (instance) id of removed buff.\nStack (instance) id of removed buff.\nNumber of stacks removed.\nEffect information from an <code>Event</code> with <code>StateChange::Effect</code>.\nDuration of an effect in time or as a tracking id.\nLocation of an effect.\nEffect information from an <code>Event</code> with …\nOrientation of an effect.\nMaximum value in <code>f32</code> representation.\nMinimum value in <code>f32</code> representation.\nRatio between <code>i16</code> and <code>f32</code> representation.\nDuration as time in milliseconds.\nDuration as tracking id.\nConverts the orientation to a <code>Position</code>.\nConverts the orientation to a rotation matrix.\nDuration of the effect in time or as tracking id.\nDuration of the effect in milliseconds.\nId of the effect.\nId of the effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new effect orientation from radians in <code>f32</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether this is the end of an effect.\nChecks whether this is the end of an effect.\nLocation of the effect.\nLocation of the effect.\nWhether the effect is on a moving platform.\nCreates a new effect orientation from radians in <code>i16</code> …\nOrientation of the effect as 3 dimensional vector.\nEffect orientation.\nOwner of the effect.\nOwner of the effect.\nRotates the <code>Position</code> vector.\nTime of registering the effect.\nTime of registering the effect.\nConverts int to float.\nConverts int to float.\nTrackable id for effect end.\nActivation (cast) event.\nActivation (cast) event.\nAgent has marker.\nDelayed combat event.\nArcDPS build information.\nArcDPS log error.\nAgent is now an attack target.\nAgent barrier change.\nBreakbar percentage.\nAgent breakbar state change.\nBuff applied.\nBuff applied.\nBuff damage.\nBuff damage.\nBuff formula.\nBuff information.\nAppears once per buff per agent on logging start.\nBuff removed.\nBuff removed.\nAgent is now dead.\nAgent is now downed.\nAgent is now alive.\nInformation common to combat events.\nAgent is no longer being tracked or out of game tracking …\nEffect created or ended.\nEffect created or ended.\nAgent entered combat.\nArcDPS log error.\nArcDPS event.\nPossible <code>Event</code> categories.\nAn iterator over the variants of EventCategory\nPossible <code>Event</code> kinds.\nAn event for old EVTC revision (<code>header[12] == 0</code>).\nAgent left combat.\nA custom event created by an extension (addon/plugin).\nA custom combat event created by an extension …\nAgent facing change.\nFractal scale.\nGame build.\nAgent gliding state changed.\nAgent is in guild.\nAgent health change.\nContent id to GUID.\nInstance started.\nError.\nGame text language.\nLast 90% before down for downs contribution.\nLog started, ended or target changed.\nLog NPC changed.\nMap id.\nAgent maximum health change.\nAgent is “recording” player.\nAgent position change.\nTick rate.\nAgent got a reward chest.\nCombat ruleset.\nSever shard id.\nSkill information.\nSkill action.\nAgent is now in game tracking range.\nLog ended.\nLog started.\nSquad marker placed or removed.\nAgent with active buff.\nAgent with reset buff.\nArc UI stats reset.\nState change event.\nDirect damage strike.\nDirect (strike) damage.\nAgent targetability change.\nAgent team change.\nUnknown event.\nAgent velocity change.\nAgent swapped weapon set.\nCurrent affinity of <code>src</code> and <code>dst</code>.\nCurrent affinity of <code>src_agent</code> and <code>dst_agent</code>.\nBuff, if relevant to the event.\nBuff damage, if relevant to the event.\nArcDPS build string.\nDetermines the <code>EventCategory</code> of the event.\nAgent the event happened to.\nAgent the event happened to.\nInstance id of destination agent as appears in game at …\nIf <code>dst_agent</code> has a master (e.g. is minion), will be equal …\nForcefully extracts a type implementing <code>Extract</code> from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the event <code>is_activation</code> as <code>Activation</code>.\nReturns the event <code>affinity</code> as <code>Affinity</code>.\nReturns the event <code>is_offcycle</code> as <code>BuffCycle</code>.\nReturns the event <code>is_buffremove</code> as <code>BuffRemove</code>.\nReturns the padding as <code>u32</code> id/signature.\nReturns the event <code>is_statechange</code> as <code>StateChange</code>.\nReturns the event <code>result</code> as <code>Strike</code>.\nChecks whether the event has a timestamp.\nTarget species id (or ArcDPS id <code>0x637261</code>).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the event into its <code>EventKind</code> representation.\nWhether event is a kind of activation event.\nChecks whether the event is an initial buff event.\nWhether event is a kind of buff remove event.\nWhether <code>dst</code> is below 50% Health.\nWhether <code>dst_agent</code> is below 50% Health.\nWhether <code>src</code> is flanking at time of event.\nWhether <code>src_agent</code> is flanking at time of event.\nWhether <code>src</code> is moving at time of event.\nWhether <code>src_agent</code> is moving at time of event.\nWhether <code>src</code> is above 90% Health.\nWhether <code>src_agent</code> is above 90% Health.\nFor relevant events this contains when the buff cycle …\nShields, if relevant to the event.\nWhether event is a kind of state change event.\nLocal Unix timestamp.\nError message.\nOverstack value, if relevant to the event.\nPadding.\nPadding.\nPadding.\nPadding.\nCombat result.\nServer Unix timestamp.\nSkill id of the relevant skill (can be zero).\nSkill id of the relevant skill (can be zero).\nAgent that caused the event.\nAgent that caused the event.\nInstance id of source agent as appears in game at time of …\nIf <code>src_agent</code> has a master (e.g. is minion), will be equal …\nRetrieves the event time, if present.\nTime of registering the event.\n<code>timeGetTime()</code> at time of registering the event.\nTime of registering the event.\nAttempts to extract a type implementing <code>TryExtract</code> from …\nAttempts to extract an <code>ActivationEvent</code> from the event.\nAttempts to extract a <code>BuffApplyEvent</code> from the event.\nAttempts to extract a <code>BuffDamageEvent</code> from the event.\nAttempts to extract a <code>BuffRemoveEvent</code> from the event.\nAttempts to extract a <code>StrikeEvent</code> from the event.\nValue, if relevant to the event.\nForcefully extracts information from a combat event.\nAttempts to extract information from a combat event.\nChecks whether <code>Self</code> can be extracted from the event.\nExtracts <code>Self</code> from the combat event.\nAttempts to extract <code>Self</code> from the combat event.\nContent GUID information.\nContent local for <code>StateChange::IdToGUID</code> events.\nAn iterator over the variants of ContentLocal\nContent is an effect.\nA globally unique identifier (GUID) used to identify COM …\nExtensions for <code>GUID</code>.\nContent is a marker.\nId of the content (volatile, depends on game build).\nContent local.\nSpecifies the first 8 hexadecimal digits.\nSpecifies the first group of 4 hexadecimal digits.\nSpecifies the second group of 4 hexadecimal digits.\nThe first 2 bytes contain the third group of 4 hexadecimal …\nFormats the GUID as a hyphenated hex string.\nFormats the GUID as a simple hex string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>GUID</code> for a “generic” WinRT type.\nCreates a <code>GUID</code> from a <code>u128</code> value.\nCreates a <code>GUID</code> with the given constant values.\nPersistent content GUID.\nFormats the contained GUID as <code>String</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the GUID is an effect.\nWhether the GUID is a marker.\nReturns the contained GUID <strong>misinterpreted</strong> as raw bytes.\nCreates a unique <code>GUID</code> value.\nConverts a <code>GUID</code> to a <code>u128</code> value.\nCreates a <code>GUID</code> represented by the all-zero byte-pattern.\nAgent has a marker.\nSquad marker.\nSquad (ground) marker placed or removed.\nAn iterator over the variants of SquadMarker\nAgent that has the marker.\nNon-zero if commander.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the marker is a commander tag.\nWhether the marker was removed.\nWhether the marker was removed.\nMarker id.\nThe squad marker that was modified.\nThe position of the squad marker.\nTime of registering the event.\nTime of registering the event.\nAgent is in guild.\nPlayer profession.\nAn iterator over the variants of Profession\nReward chest received.\nPlayer specialization.\nAn iterator over the variants of Specialization\nAgent has a tag.\nUnknown or invalid.\nUnknown or invalid.\nAgent that is in guild.\nAgent that is self.\nAgent that has the tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild id in GW2 API form.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>Profession</code> corresponding to the specialization.\nReward id.\nTag id.\nTime of registering the event.\nTime of registering the reward.\nTime of registering the event.\nConversion from inch to meter.\nPositional information.\nPositional information for an agent.\nInterprets the position as rotation angles and converts it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a position from Mumble coordinates.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the length of the position interpreted as vector.\nInterprets the position as vector and multiplies it with …\nCreates new positional information.\nInterprets the position as rotation angles and rotates the …\nConverts the position to an <code>array</code>.\nConverts the position to Mumble coordinates.\nConverts the position to a <code>tuple</code>.\nSkill activation (cast).\nActivation (skill cast) event.\nAn iterator over the variants of Activation\nSkill animation stop (UNOFFICIAL).\nAn iterator over the variants of AnimationStop\nBandage downstate skill. v Personal healing only.\nStopped skill activation without reaching tooltip time.\nStopped skill activation with reaching tooltip time.\nArcDPS custom skill ids.\nDodge skill.\nNot used, different kind of event.\nUnused as of 5th November 2019.\nResurrect skill.\nAnimation completed fully.\nSkill information from an <code>Event</code> with <code>StateChange::SkillInfo</code>…\nSkill timing from an <code>Event</code> with <code>StateChange::SkillTiming</code>.\nStarted skill/animation activation.\nUnknown or invalid.\nUnknown or invalid.\nKind of activation state change.\nAgent casting the skill.\nActivation duration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nScaled activation duration.\nId of casted skill.\nTarget location, if applicable.\nTime of registering the activation.\nStrike was absorbed.\nOn-skill-activation event.\nStrike missed.\nStrike was blocked.\nSkill dealt breakbar damage.\nStrike was critical.\nSkill crowd controlled the target.\nSkill downed the target.\nStrike was evaded.\nStrike was glancing.\nStrike interrupted something.\nSkill killed the target.\nNormal damage strike.\nStrike types.\nStrike (direct damage) event.\nAn iterator over the variants of Strike\nUnknown.\nCommon combat event information.\nWhether the strike dealt health damage to the target.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDamage inflicted to shields (barrier).\nKind of strike.\nWhether target is currently downed.\nTotal damage inflicted.\nBundle or kit weapon set.\nFirst land weapon set.\nSecond land weapon set.\nTransform weapon set.\nUnknown.\nFirst underwater weapon set.\nSecond underwater weapon set.\nAgent weapon set.\nAn iterator over the variants of WeaponSet\nActive weapon set changed.\nAgent that swapped weapon sets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrevious weapon set.\nTime of registering the weapon swap.\nNew weapon set.")