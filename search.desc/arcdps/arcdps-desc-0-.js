searchState.loadedDescShard("arcdps", 0, "Bindings for ArcDPS plugins.\nStrike was absorbed.\nSkill activation (cast).\nOn-skill-activation event.\nWhether the agent is an ally or enemy.\nRepresents an agent in a realtime combat event.\n<code>Agent</code> with an owned <code>String</code> name.\nAgony Resistance.\nLast or all stacks removed.\nBuff is generic category.\nDelayed combat event.\nArcDPS build information.\nArmor.\nAttack speed.\nAgent is an attack target of parent gadget.\nAttributes for buff formulas.\nBandage downstate skill. v Personal healing only.\nAgent barrier change.\nStrike missed.\nStrike was blocked.\nBuff is a Boon.\nBuff is granted by a Boost consumable.\nSkill dealt breakbar damage.\nBreakbar percentage.\nAgent breakbar state change.\nBuff info category <strong>after</strong> 13 December 2022.\nCombat buff cycle.\nBuff formula.\nBuff information.\nInitially present buffs.\nCombat buff remove.\nStopped skill activation without reaching tooltip time.\nStopped skill activation with reaching tooltip time.\nAgent is now dead.\nAgent is now downed.\nAgent is now alive.\nConcentration.\nOutgoing condition damage.\nIncoming condition damage.\nCondition Damage.\nBuff is a Condition.\nStrike was critical.\nSkill crowd controlled the target.\nArcDPS custom skill ids.\nDamage happened on tick timer.\nDodge skill.\nSource agent is no longer being tracked or out of game …\nSkill downed the target.\nRetired since 230716.\nVisual effect created or ended.\nEffect atttached to agent created.\nEffect attached to agent removed.\nGround effect created.\nGround effect removed.\nBuff is Enhancement granted by a Utility consumable.\nAgent entered combat.\nStrike was evaded.\nArcDPS event.\nAgent left combat.\nExpertise.\nA custom event created by an extension (addon/plugin).\nA custom combat event created by an extension …\nAgent facing change.\nFerocity.\nEnemy agent.\nBuff is granted by Food consumable.\nFractal scale.\nAllied agent.\nGame build.\nStrike was glancing.\nAgent gliding state change.\nAgent is in guild.\nHealing.\nAgent health change.\nContent id to GUID.\nUsed internally by ArcDPS. Should not appear anywhere.\nMap instance start timestamp.\nMessage with log integrity information.\nStrike interrupted something.\nInvalid.\nSkill killed the target.\nGW2 client language.\nGame text language.\nRetired since 230716.\nLog boss agent changed.\nSingle stack removed.\nMap id.\nAgent has a marker.\nAgent maximum health change.\nMissile created.\nMissile launched or relaunched.\nMissile removed or destroyed.\nNot used, different kind of event.\nNot used, different kind of event.\nNot used, different kind of event.\nNormal damage strike.\nDamage happened outside tick timer (resistable).\nDamage happened to source on hitting target.\nDamage happened to target on hitting target.\nDamage happened to target on source losing a stack.\nRetired since May 2021.\nOutgoing strike damage.\nIncoming strike damage.\nPlayer recording the log.\nAgent position change.\nPower.\nPrecision.\nPlayer profession.\nUnused as of 5th November 2019.\nResurrect skill.\nTick rate health.\nUsed internally by ArcDPS. Should not appear anywhere.\nAnimation completed fully.\nSource agent got a reward chest.\nCombat ruleset.\nSever shard id.\nSingle stack removed.\nOutgoing life leech.\nIncoming life leech.\nSkill information.\nSkill action.\nAgent is now in game tracking range.\nPlayer specialization.\nSquad combat end, last player has left combat. Logging has …\nSquad combat start, first player entered combat. Logging …\nSquad ground marker placed or removed.\nBuff stack is now active.\nBuff stack duration changed.\nBuff is a Stance.\nStarted skill/animation activation.\nStat increase.\nArc UI stats reset.\nCombat state change kinds.\nStrike types.\nDisable stopped early.\nReference on what fields are currently supported by the …\nAgent changed targetable state.\nAgent team change.\nToughness.\nBuff is granted by a Trait.\nBuff is a Transform.\nUnknown affinity between agents.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown.\nBuff is a gear item or upgrade.\nAgent velocity change.\nVitality.\nAgent swapped weapon set.\nCurrent affinity of <code>src_agent</code> and <code>dst_agent</code>.\nBuff, if relevant to the event.\nBuff damage, if relevant to the event.\nCallback types.\nDetermines the <code>EventCategory</code> of the event.\nCallback for area combat events.\nCallback for local combat events.\nReturns the DirectX 11 device, if available.\nReturns the current DirectX version.\nWhether the strike dealt health damage to the target.\nAgent the event happened to.\nInstance id of destination agent as appears in game at …\nIf <code>dst_agent</code> has a master (e.g. is minion), will be equal …\nReturns the DirectX swap chain, if available.\nElite (specialization) of the agent.\nElite (specialization) of the agent.\nArcDPS API structs.\nCreates plugin exports for ArcDPS.\nArcDPS exports.\nForcefully extracts a type implementing <code>Extract</code> from the …\nUnofficial Extras support.\nChat message callback for Unofficial Extras.\nInitialization callback for Unofficial Extras.\nKeybind changed callback for Unofficial Extras.\nLanguage changed callback for Unofficial Extras.\nSquad chat message callback for Unofficial Extras.\nSquad update callback for Unofficial Extras.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the event <code>is_activation</code> as <code>Activation</code>.\nReturns the event <code>affinity</code> as <code>Affinity</code>.\nReturns the event <code>is_offcycle</code> as <code>BuffCycle</code>.\nReturns the event <code>is_buffremove</code> as <code>BuffRemove</code>.\nReturns the padding as <code>u32</code> id/signature.\nReturns the event <code>is_statechange</code> as <code>StateChange</code>.\nReturns the event <code>result</code> as <code>Strike</code>.\nChecks whether the event has a timestamp.\nChecks whether the statechange has an associated timestamp.\nUnique id.\nUnique id.\nCallback for standalone UI creation.\nRetrieves the <code>imgui::Context</code>.\nCallback for plugin load.\nInitializes ArcDPS information.\nInitializes DirectX information.\nInitializes ImGui information.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the event into its <code>EventKind</code> representation.\nWhether event is a kind of activation event.\nChecks whether the event is an initial buff event.\nWhether event is a kind of buff remove event.\nWhether <code>dst_agent</code> is below 50% Health.\nWhether <code>src_agent</code> is flanking at time of event.\nWhether <code>src_agent</code> is moving at time of event.\nWhether <code>src_agent</code> is above 90% Health.\nFor relevant events this contains when the buff cycle …\nWhether the agent is self (the local player).\nWhether the agent is self (the local player).\nShields, if relevant to the event.\nWhether event is a kind of state change event.\nDetermines the kind of agent.\nLogging via the <code>log</code> crate.\nReturns the agent’s name.\nName of the plugin.\nName of the agent.\nReturns the raw pointer to the agent’s name.\nCallback for plugin settings UI creation.\nCallback for options windows.\nOverstack value, if relevant to the event.\nPadding.\nPadding.\nPadding.\nPadding.\nProfession of the agent.\nProfession of the agent.\nReturns the <code>Profession</code> corresponding to the specialization.\nRaw combat callback.\nRaw local combat callback.\nRaw extras chat message callback.\nRaw extras init callback.\nRaw extras keybind changed callback.\nRaw extras language changed callback.\nRaw extras squad update callback.\nRaw ImGui callback.\nRaw options callback.\nRaw options windows callback.\nRaw filtered WndProc callback.\nRaw WndProc callback.\nCallback for plugin unload.\nCombat result.\nUnique signature of the plugin.\nSkill id of the relevant skill (can be zero).\nAgent that caused the event.\nInstance id of source agent as appears in game at time of …\nIf <code>src_agent</code> has a master (e.g. is minion), will be equal …\nStrips the <code>&#39;:&#39;</code> prefix from an account name if present.\nTeam the agent is in.\nTeam the agent is in.\nRetrieves the event time, if present.\n<code>timeGetTime()</code> at time of registering the event.\nConverts the <code>Agent</code> to the owned version <code>AgentOwned</code>.\nAttempts to extract a type implementing <code>TryExtract</code> from …\nAttempts to extract an <code>ActivationEvent</code> from the event.\nAttempts to extract a <code>BuffApplyEvent</code> from the event.\nAttempts to extract a <code>BuffDamageEvent</code> from the event.\nAttempts to extract a <code>BuffRemoveEvent</code> from the event.\nAttempts to extract a <code>StrikeEvent</code> from the event.\nCallback for plugin unload.\nValue, if relevant to the event.\nRetrieves the <code>imgui::Ui</code> for rendering.\nCallback for filtered key presses.\nCallback for key presses.\nExported struct for ArcDPS plugins.\nCombat callback.\nLocal combat callback.\nReturns the argument unchanged.\nImGui callback.\nImGui version number.\nCalls <code>U::from(self)</code>.\nOptions callback.\nOptions windows callback.\nPlugin build (version) string.\nPlugin name string.\nUnique plugin signature.\nSize of exports table.\nFiltered WndProc callback.\nWndProc callback.\nStrike was absorbed.\nSkill activation (cast).\nActivation (cast) event.\nActivation (cast) event.\nOn-skill-activation event.\nWhether the agent is an ally or enemy.\nRepresents an agent in a realtime combat event.\nIds for an agent.\nPossible agent kinds.\nAgent has marker.\n<code>Agent</code> with an owned <code>String</code> name.\nAgony Resistance.\nLast or all stacks removed.\nBuff is generic category.\nDelayed combat event.\nDelayed combat event.\nArcDPS build information.\nArcDPS build information.\nArmor.\nAttack speed.\nAgent is now an attack target.\nAgent is an attack target of parent gadget.\nAttributes for buff formulas.\nAgent barrier change.\nAgent barrier change.\nStrike missed.\nStrike was blocked.\nBuff is a Boon.\nBuff is granted by a Boost consumable.\nSkill dealt breakbar damage.\nBreakbar percentage.\nBreakbar percentage.\nAgent breakbar state change.\nAgent breakbar state change.\nBuff applied.\nBuff applied.\nBuff info category <strong>after</strong> 13 December 2022.\nCombat buff cycle.\nBuff damage.\nBuff damage.\nBuff formula.\nBuff formula.\nBuff information.\nBuff information.\nAppears once per buff per agent on logging start.\nInitially present buffs.\nCombat buff remove.\nBuff removed.\nBuff removed.\nStopped skill activation without reaching tooltip time.\nStopped skill activation with reaching tooltip time.\nAgent is now dead.\nAgent is now dead.\nAgent is now downed.\nAgent is now downed.\nAgent is now alive.\nAgent is now alive.\nConcentration.\nOutgoing condition damage.\nIncoming condition damage.\nCondition Damage.\nBuff is a Condition.\nStrike was critical.\nSkill crowd controlled the target.\nArcDPS custom skill ids.\nDamage happened on tick timer.\nAgent is no longer being tracked or out of game tracking …\nSource agent is no longer being tracked or out of game …\nSkill downed the target.\nEffect created or ended.\nRetired since 230716.\nEffect created or ended.\nVisual effect created or ended.\nEffect around Agent created.\nEffect atttached to agent created.\nEffect around Agent removed.\nEffect attached to agent removed.\nGround effect created.\nGround effect created.\nGround effect removed.\nGround effect removed.\nBuff is Enhancement granted by a Utility consumable.\nAgent entered combat.\nAgent entered combat.\nStrike was evaded.\nArcDPS event.\nPossible <code>Event</code> categories.\nPossible <code>Event</code> kinds.\nAgent left combat.\nAgent left combat.\nExpertise.\nA custom event created by an extension (addon/plugin).\nA custom event created by an extension (addon/plugin).\nA custom combat event created by an extension …\nA custom combat event created by an extension …\nAgent facing change.\nAgent facing change.\nFerocity.\nEnemy agent.\nBuff is granted by Food consumable.\nFractal scale.\nFractal scale.\nAllied agent.\nGame build.\nGame build.\nAgent is a gadget.\nStrike was glancing.\nAgent gliding state changed.\nAgent gliding state change.\nAgent is in guild.\nAgent is in guild.\nHealing.\nAgent health change.\nAgent health change.\nConversion from inch to meter.\nContent id to GUID.\nContent id to GUID.\nUsed internally by ArcDPS. Should not appear anywhere.\nInstance started.\nMap instance start timestamp.\nError.\nMessage with log integrity information.\nStrike interrupted something.\nInvalid.\nSkill killed the target.\nGW2 client language.\nGame text language.\nGame text language.\nAn iterator over the variants of Language\nLast 90% before down for downs contribution.\nRetired since 230716.\nLog NPC changed.\nLog boss agent changed.\nSingle stack removed.\nMap id.\nMap id.\nAgent has a marker.\nAgent maximum health change.\nAgent maximum health change.\nMissile created.\nMissile created.\nMissile launched or relaunched.\nMissile launched or relaunched.\nMissile removed or destroyed.\nMissile removed or destroyed.\nNot used, different kind of event.\nNot used, different kind of event.\nNot used, different kind of event.\nNormal damage strike.\nDamage happened outside tick timer (resistable).\nDamage happened to source on hitting target.\nDamage happened to target on hitting target.\nDamage happened to target on source losing a stack.\nRetired since May 2021.\nAgent is an NPC.\nOutgoing strike damage.\nIncoming strike damage.\nAgent is a player.\nAgent is “recording” player.\nPlayer recording the log.\nPositional information.\nAgent position change.\nAgent position change.\nPower.\nPrecision.\nPlayer profession.\nUnused as of 5th November 2019.\nTick rate.\nTick rate health.\nUsed internally by ArcDPS. Should not appear anywhere.\nAnimation completed fully.\nAgent got a reward chest.\nSource agent got a reward chest.\nCombat ruleset.\nCombat ruleset.\nSever shard id.\nSever shard id.\nSingle stack removed.\nOutgoing life leech.\nIncoming life leech.\nSkill information.\nSkill information.\nSkill action.\nSkill action.\nAgent is now in game tracking range.\nAgent is now in game tracking range.\nPlayer specialization.\nLog ended.\nSquad combat end, last player has left combat. Logging has …\nLog started.\nSquad combat start, first player entered combat. Logging …\nSquad marker placed or removed.\nSquad ground marker placed or removed.\nAgent with active buff.\nBuff stack is now active.\nAgent with reset buff.\nBuff stack duration changed.\nBuff is a Stance.\nStarted skill/animation activation.\nStat increase.\nArc UI stats reset.\nArc UI stats reset.\nCombat state change kinds.\nState change event.\nAn iterator over the variants of StateChange\nStrike types.\nDirect damage strike.\nDirect (strike) damage.\nEffect\nDisable stopped early.\nAgent targetability change.\nAgent changed targetable state.\nAgent team change.\nAgent team change.\nToughness.\nBuff is granted by a Trait.\nBuff is a Transform.\nAttempts to extract information from a combat event.\nUnknown affinity between agents.\nUnknown or invalid.\nUnknown or invalid.\nUnknown event.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown.\nBuff is a gear item or upgrade.\nAgent velocity change.\nAgent velocity change.\nVitality.\nAgent swapped weapon set.\nAgent swapped weapon set.\nCurrent affinity of <code>src_agent</code> and <code>dst_agent</code>.\nAgent bindings &amp; utilities.\nGet a flags value with all known bits set.\nInterprets the position as rotation angles and converts it …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBuff bindings &amp; utilities.\nBuff, if relevant to the event.\nBuff damage, if relevant to the event.\nChecks whether <code>Self</code> can be extracted from the event.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nBindings &amp; utilities for GUIDs appearing in events.\nThe intersection of a source flags value with the …\nAgent the event happened to.\nInstance id of destination agent as appears in game at …\nIf <code>dst_agent</code> has a master (e.g. is minion), will be equal …\nEffect bindings &amp; utilities.\nElite (specialization) of the agent.\nElite (specialization) of the agent.\nGet a flags value with all bits unset.\nEvent bindings &amp; utilities.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nInterfaces for extracting information from events.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nCreates new agent id information from the <code>Event</code> …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nCreates a position from Mumble coordinates.\nGet a flags value with the bits of a flag with the given …\nCreates a position from <code>i16</code> values with a scaling factor.\nCreates new agent id information from the <code>Event</code> source …\nReturns whether the agent has a master.\nAgent id as assigned by Arc.\nUnique id.\nUnique id.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInstance id of the agent as appears in game at time of …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether event is a kind of activation event.\nWhether all known bits in this flags value are set.\nWhether event is a kind of buff remove event.\nWhether all bits in this flags value are unset.\nWhether <code>dst_agent</code> is below 50% Health.\nWhether <code>src_agent</code> is flanking at time of event.\nWhether <code>src_agent</code> is moving at time of event.\nWhether <code>src_agent</code> is above 90% Health.\nFor relevant events this contains when the buff cycle …\nWhether the agent is self (the local player).\nWhether the agent is self (the local player).\nShields, if relevant to the event.\nWhether event is a kind of state change event.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns the length of the position interpreted as vector.\nMarker bindings &amp; utilities.\nIf agent has a master (e.g. is minion), will be equal to …\nInterprets the position as vector and multiplies it with …\nMissile bindings &amp; utilities.\nName of the agent.\nDetermines the kind of agent for the given profession and …\nCreates new agent id information.\nCreates new positional information.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nOverstack value, if relevant to the event.\nPadding.\nPadding.\nPadding.\nPadding.\nPlayer bindings &amp; utilities.\nBindings &amp; utilities for the game’s 3d space.\nProfession of the agent.\nProfession of the agent.\nThe intersection of a source flags value with the …\nCombat result.\nInterprets the position as rotation angles and rotates the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSkill bindings &amp; utilities.\nSkill id of the relevant skill (can be zero).\nAgent that caused the event.\nInstance id of source agent as appears in game at time of …\nIf <code>src_agent</code> has a master (e.g. is minion), will be equal …\nBindings &amp; utilities for any form of strikes (direct …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTeam the agent is in.\nTeam the agent is in.\n<code>timeGetTime()</code> at time of registering the event.\nConverts the position to an <code>array</code>.\nConverts the position to Mumble coordinates.\nConverts the position to a <code>tuple</code>.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nAttempts to extract <code>Self</code> from the combat event.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nValue, if relevant to the event.\nBindings &amp; utilities for agent weapon sets.\nCreates new agent id information without a master.\nDefiance bar active.\nWhether the agent is an ally or enemy.\nAn iterator over the variants of Affinity\nIds for an agent.\nPossible agent kinds.\nAn iterator over the variants of AgentKind\nSimple event regarding an agent.\nAgent is now an attack target.\nAgent barrier percent change.\nBreakbar percent change.\nBreakbar (defiance bar) states.\nBreakbar state change.\nAn iterator over the variants of BreakbarState\nConversion ratio.\nConversion ratio.\nAgent down contribution event (retired).\nAgent entered combat.\nEnemy agent.\nAllied agent.\nAgent is a gadget.\nAgent gliding state change.\nAgent health percent change.\nDefiance bar immune.\nInvalid.\nAgent max health change.\nNo defiance.\nAgent is an NPC.\nAgent is a player.\nDefiance bar recovering.\nStunbreak event.\nAgent targetable state change.\nAgent team change.\nUnknown affinity between agents.\nUnknown state.\nAgent that is an attack target.\nAgent changing breakbar state.\nAgent that had their breakbar health changed.\nAgent that entered combat.\nAgent that changed gliding state.\nAgent that had their max health changed.\nAgent that had their health percent changed.\nAgent that had their current barrier changed.\nAgent that the status change happened to.\nAgent that entered downed state.\nAgent stopping the disable.\nAgent that had their targetable state changed.\nAgent that had their team changed.\nCurrent barrier percent with <code>1.0</code> being max.\nDuration remaining.\nAgent elite specialization.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNew breakbar health in percent.\nCurrent health percent with <code>1.0</code> being max.\nAgent id as assigned by Arc.\nInstance id of the agent as appears in game at time of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf agent has a master (e.g. is minion), will be equal to …\nNew agent max health.\nParent gadget agent.\nAgent profession.\nRealtime API <code>Agent</code> types.\nNew breakbar state.\nAgent subgroup.\nCurrent targetable state.\nNew targetable state.\nNew team id.\nTime of registering the attack target.\nTime of registering the breakbar state change.\nTime of registering the breakbar health change.\nTime of registering the combat enter.\nTime of registering the gliding state.\nTime of registering the max health change.\nTime of registering the health percent change.\nTime of registering the barrier change.\nTime of registering the status change.\nTime of registering the downed state.\nTime of registering the stunbreak.\nTime of registering the targetable state change.\nTime of registering the team change.\nTime since last 90% HP in milliseconds.\nRepresents an agent in a realtime combat event.\n<code>Agent</code> with an owned <code>String</code> name.\nElite (specialization) of the agent.\nElite (specialization) of the agent.\nUnique id.\nUnique id.\nWhether the agent is self (the local player).\nWhether the agent is self (the local player).\nName of the agent.\nProfession of the agent.\nProfession of the agent.\nTeam the agent is in.\nTeam the agent is in.\nAgony Resistance.\nLast or all stacks removed.\nLast or all stacks removed.\nBuff is generic category.\nBuff is generic category.\nNew stack applied or existing stack replaced.\nArmor.\nAttack speed.\nAttributes for buff formulas.\nAn iterator over the variants of Attribute\nBuff is a Boon.\nBuff is a Boon.\nBuff is granted by a Boost consumable.\nBuff is granted by a Boost consumable.\nBuff apply event.\nBuff apply behavior.\nAn iterator over the variants of BuffApplyKind\nBuff info category <strong>after</strong> 13 December 2022.\nBuff info category <strong>before</strong> 13 December 2022.\nCombat buff cycle.\nAn iterator over the variants of BuffCycle\nBuff damage event.\nBuff damage tick results.\nAn iterator over the variants of BuffDamageResult\nBuff formula from an <code>Event</code> with <code>StateChange::BuffFormula</code>.\nBuff information from an <code>Event</code> with <code>StateChange::BuffInfo</code>.\nBuff initial event.\nCombat buff remove.\nBuff remove event.\nAn iterator over the variants of BuffRemove\nKind of buff remove.\nAn iterator over the variants of BuffRemoveKind\nBuff stacking behavior.\nAn iterator over the variants of BuffStackType\nStacking in duration with cap.\nConcentration.\nOutgoing condition damage.\nIncoming condition damage.\nCondition Damage.\nBuff is a Condition.\nBuff is a Condition.\nDamage happened on tick timer.\nBuff is Enhancement granted by a Utility consumable.\nBuff is Enhancement granted by a Utility consumable.\nExpertise.\nExisting stack extended.\nFerocity.\nBuff is granted by Food consumable.\nBuff is granted by Food consumable.\nNo stacking. Force override.\nHealing.\nExpected to hit.\nTarget invulnerable by buff.\nTarget invulnerable by player skill.\nTarget invulnerable by player skill.\nTarget invulnerable by player skill.\nSingle stack removed.\nSingle stack removed.\nNot used, different kind of event.\nDamage happened outside tick timer (resistable).\nDamage happened to source on hitting target.\nDamage happened to target on hitting target.\nDamage happened to target on source losing a stack.\nRetired since May 2021.\nOutgoing strike damage.\nIncoming strike damage.\nPower.\nPrecision.\nStacking in duration with queue.\nBuff formula from an <code>Event</code> with <code>StateChange::BuffFormula</code>.\nRegeneration-like stacking in duration.\nSingle stack removed.\nSingle stack removed.\nOutgoing life leech.\nIncoming life leech.\nActive buff stack change.\nBuff stack reset.\nStacking in intensity.\nStacking in intensity with conditional loss.\nBuff is a Stance.\nBuff is a Stance.\nStat increase.\nToughness.\nBuff is granted by a Trait.\nBuff is granted by a Trait.\nBuff is a Transform.\nBuff is a Transform.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nUnknown or invalid.\nBuff is a gear item or upgrade.\nBuff is granted by gear item or upgrade.\nVitality.\nAgent that had their active buff stack changed.\nAgent that the stack reset happened to.\nKind of buff application/extension.\nBuff.\nThe category of buff.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nWhether damage happened on tick (cycle) or reactively …\nBuff damage amount.\nCurrent remaining duration.\nCurrent buff duration.\nNew duration to reset to.\nMaximum buff duration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProbably invert.\nProbably invulnerable.\nWhether the buff formula is always active.\nWhether the buff formula is always active.\nMaximum amount of stacks.\nOriginal full duration.\nKind of buff remove.\nRemoved buff(s) as duration.\nRemoved buff(s) as intensity.\nProbably resistance.\nResult of buff damage.\nBuff skill id.\nStack active status.\nWhether stack is active.\nBuff stack (instance) id.\nBuff stack (instance) id.\nStack id of new active stack.\nStack id.\nBuff stacking behavior.\nTime of registering the active buff stack change.\nTime of registering the stack reset.\nApplied duration.\nDuration change.\nNew stack duration.\nDuration of removed stack, if any.\nStack (instance) id of removed buff.\nStack (instance) id of removed buff.\nNumber of stacks removed.\nContent information.\nContent local for <code>StateChange::IdToGUID</code> events.\nAn iterator over the variants of ContentLocal\nContent type for <code>ContentInfo</code>.\nEffect.\nContent is an effect.\nA globally unique identifier (GUID) used to identify COM …\nExtensions for <code>GUID</code>.\nMarker.\nContent is a marker.\nSkill.\nContent is a skill.\nSpecies (only characters, not gadgets).\nContent is a species (only characters, not gadgets).\nUnknown content type.\nId of the content (volatile, depends on game build).\nContent type.\nSpecifies the first 8 hexadecimal digits.\nSpecifies the first group of 4 hexadecimal digits.\nSpecifies the second group of 4 hexadecimal digits.\nThe first 2 bytes contain the third group of 4 hexadecimal …\nFormats the GUID as a hyphenated hex string.\nFormats the GUID as a simple hex string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>GUID</code> for a “generic” WinRT type.\nCreates a <code>GUID</code> from a <code>u128</code> value.\nCreates a <code>GUID</code> with the given constant values.\nPersistent content GUID.\nFormats the contained GUID as <code>String</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the content is an effect.\nWhether the content is a marker.\nWhether the content is a skill.\nWhether the content is a species.\nReturns the contained GUID <strong>misinterpreted</strong> as raw bytes.\nCreates a unique <code>GUID</code> value.\nConverts a <code>GUID</code> to a <code>u128</code> value.\nCreates a <code>GUID</code> represented by the all-zero byte-pattern.\nDefault effect duration, if available.\nEffect type.\nEffect information from an <code>Event</code> with …\nEffect information from an <code>Event</code> with …\nEffect information from an <code>Event</code> with <code>StateChange::Effect45</code>…\nEffect information from an <code>Event</code> with <code>StateChange::Effect51</code>…\nEffect information from an <code>Event</code> with …\nEffect information from an <code>Event</code> with …\nAgent related to the effect.\nDuration of the effect in time or as tracking id.\nDuration of the effect in milliseconds.\nDuration of the effect in milliseconds.\nDuration of the effect in milliseconds.\nId of the effect.\nId of the effect.\nId of the effect.\nId of the effect.\nEffect flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks whether this is the end of an effect.\nChecks whether this is the end of an effect.\nLocation of the effect.\nLocation of the effect.\nLocation of the effect.\nWhether the effect is on a moving platform.\nWhether the effect is on a moving platform.\nOrientation of the effect as 3 dimensional vector.\nEffect orientation.\nEffect orientation.\nEffect scale.\nSource of the effect.\nSource of the effect.\nSource of the effect.\nSource of the effect.\nTarget of the effect (if applicable).\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTrackable id for effect end.\nTrackable id for effect remove.\nTrackable id for effect remove.\nTrackable id for effect remove.\nTrackable id for effect remove.\nEffect information from an <code>Event</code> with <code>StateChange::Effect45</code>…\nDuration of an effect in time or as a tracking id.\nLocation of an effect.\nDuration as time in milliseconds.\nDuration as tracking id.\nDuration of the effect in time or as tracking id.\nId of the effect.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocation of the effect.\nOrientation of the effect as 3 dimensional vector.\nSource of the effect.\nTime of registering the effect.\nEffect information from an <code>Event</code> with <code>StateChange::Effect51</code>…\nLocation of an effect.\nOrientation of an effect.\nMaximum value in <code>f32</code> representation.\nMinimum value in <code>f32</code> representation.\nRatio between <code>i16</code> and <code>f32</code> representation.\nConverts the orientation to a <code>Position</code>.\nConverts the orientation to a rotation matrix.\nDuration of the effect in milliseconds.\nId of the effect.\nReturns the argument unchanged.\nCreates a new effect orientation from radians in <code>f32</code> …\nCalls <code>U::from(self)</code>.\nLocation of the effect.\nWhether the effect is on a moving platform.\nCreates a new effect orientation from radians in <code>i16</code> …\nEffect orientation.\nRotates the <code>Position</code> vector.\nSource of the effect.\nTime of registering the effect.\nConverts int to float.\nConverts int to float.\nTrackable id for effect end.\nActivation (cast) event.\nActivation (cast) event.\nActivation (skill cast) event.\nEffect information from an <code>Event</code> with …\nEffect information from an <code>Event</code> with …\nAgent has marker.\nAgent has a marker.\nSimple event regarding an agent.\nDelayed combat event.\nArcDPS build information.\nArcDPS log error.\nAgent is now an attack target.\nAgent is now an attack target.\nAgent barrier change.\nAgent barrier percent change.\nBreakbar percentage.\nBreakbar percent change.\nAgent breakbar state change.\nBreakbar state change.\nBuff applied.\nBuff applied.\nBuff apply event.\nBuff damage.\nBuff damage.\nBuff damage event.\nBuff formula from an <code>Event</code> with <code>StateChange::BuffFormula</code>.\nBuff formula.\nBuff information from an <code>Event</code> with <code>StateChange::BuffInfo</code>.\nBuff information.\nAppears once per buff per agent on logging start.\nBuff initial event.\nBuff removed.\nBuff removed.\nBuff remove event.\nAgent is now dead.\nAgent is now downed.\nAgent is now alive.\nInformation common to combat events.\nAgent is no longer being tracked or out of game tracking …\nAgent down contribution event (retired).\nEffect information from an <code>Event</code> with <code>StateChange::Effect45</code>…\nEffect created or ended.\nEffect information from an <code>Event</code> with <code>StateChange::Effect51</code>…\nEffect created or ended.\nEffect around Agent created.\nEffect around Agent removed.\nGround effect created.\nGround effect removed.\nAgent entered combat.\nAgent entered combat.\nArcDPS log error.\nArcDPS event.\nPossible <code>Event</code> categories.\nAn iterator over the variants of EventCategory\nPossible <code>Event</code> kinds.\nAn event for old EVTC revision (<code>header[12] == 0</code>).\nAgent left combat.\nA custom event created by an extension (addon/plugin).\nA custom combat event created by an extension …\nAgent facing change.\nFractal scale.\nGame build.\nAgent gliding state changed.\nAgent gliding state change.\nEffect information from an <code>Event</code> with …\nEffect information from an <code>Event</code> with …\nAgent is in guild.\nAgent is in guild.\nAgent health change.\nAgent health percent change.\nContent id to GUID.\nInstance started.\nError.\nGame text language.\nLast 90% before down for downs contribution.\nLog started, ended or target changed.\nLog NPC changed.\nMap id.\nAgent max health change.\nAgent maximum health change.\nMissile created.\nMissile created.\nMissile created.\nMissile launched or relaunched.\nMissile created.\nMissile removed or destroyed.\nAgent is “recording” player.\nAgent position change.\nPositional information for an agent.\nTick rate.\nAgent got a reward chest.\nReward chest received.\nCombat ruleset.\nSever shard id.\nSkill information from an <code>Event</code> with <code>StateChange::SkillInfo</code>…\nSkill information.\nSkill timing from an <code>Event</code> with <code>StateChange::SkillTiming</code>.\nSkill action.\nAgent is now in game tracking range.\nLog ended.\nLog started.\nSquad marker placed or removed.\nSquad (ground) marker placed or removed.\nAgent with active buff.\nActive buff stack change.\nAgent with reset buff.\nBuff stack reset.\nArc UI stats reset.\nState change event.\nDirect damage strike.\nDirect (strike) damage.\nStrike (direct damage) event.\nEffect\nStunbreak event.\nAgent has a tag.\nAgent targetability change.\nAgent targetable state change.\nAgent team change.\nAgent team change.\nUnknown event.\nAgent velocity change.\nAgent swapped weapon set.\nActive weapon set changed.\nKind of activation state change.\nCurrent affinity of <code>src</code> and <code>dst</code>.\nCurrent affinity of <code>src_agent</code> and <code>dst_agent</code>.\nAgent that is an attack target.\nAgent changing breakbar state.\nAgent that had their breakbar health changed.\nAgent that entered combat.\nAgent that changed gliding state.\nAgent that had their max health changed.\nAgent that had their health percent changed.\nAgent that had their current barrier changed.\nAgent that the status change happened to.\nAgent that entered downed state.\nAgent stopping the disable.\nAgent that had their targetable state changed.\nAgent that had their team changed.\nAgent that had their active buff stack changed.\nAgent that the stack reset happened to.\nAgent related to the effect.\nAgent that has the marker.\nRelated agent.\nAgent that is in guild.\nAgent that is self.\nAgent that has the tag.\nAgent who changed position.\nAgent casting the skill.\nAgent that swapped weapon sets.\nKind of buff application/extension.\nCurrent barrier percent with <code>1.0</code> being max.\nBuff.\nBuff, if relevant to the event.\nBuff damage, if relevant to the event.\nArcDPS build string.\nThe category of buff.\nNon-zero if commander.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nCommon combat event information.\nCurrent location.\nWhether damage happened on tick (cycle) or reactively …\nBuff damage amount.\nAgent the event happened to.\nInstance id of destination agent as appears in game at …\nIf <code>dst_agent</code> has a master (e.g. is minion), will be equal …\nCurrent remaining duration.\nCurrent buff duration.\nNew duration to reset to.\nDuration of the effect in time or as tracking id.\nDuration of the effect in milliseconds.\nDuration of the effect in milliseconds.\nDuration of the effect in milliseconds.\nActivation duration.\nMaximum buff duration.\nDuration remaining.\nId of the effect.\nId of the effect.\nId of the effect.\nId of the effect.\nAgent elite specialization.\nEffect flags.\nMissile flags on launch.\nTotal friendly fire damage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild id in GW2 API form.\nNew breakbar health in percent.\nCurrent health percent with <code>1.0</code> being max.\nWhether at least one enemy was hit along the way.\nTarget species id (or ArcDPS id <code>0x637261</code>).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProbably invert.\nProbably invulnerable.\nWhether event is a kind of activation event.\nWhether event is a kind of buff remove event.\nWhether the marker is a commander tag.\nWhether <code>dst</code> is below 50% Health.\nWhether <code>dst_agent</code> is below 50% Health.\nWhether <code>src</code> is flanking at time of event.\nWhether <code>src_agent</code> is flanking at time of event.\nWhether <code>src</code> is moving at time of event.\nWhether <code>src_agent</code> is moving at time of event.\nWhether <code>src</code> is above 90% Health.\nWhether <code>src_agent</code> is above 90% Health.\nFor relevant events this contains when the buff cycle …\nWhether the marker was removed.\nWhether the marker was removed.\nShields, if relevant to the event.\nWhether event is a kind of state change event.\nLocal Unix timestamp.\nLocation of the effect.\nLocation of the effect.\nLocation of the effect.\nMissile location.\nMarker id.\nThe squad marker that was modified.\nNew agent max health.\nMaximum amount of stacks.\nError message.\nMissile motion type.\nWhether the effect is on a moving platform.\nWhether the effect is on a moving platform.\nOrientation of the effect as 3 dimensional vector.\nEffect orientation.\nEffect orientation.\nOriginal full duration.\nOverstack value, if relevant to the event.\nPadding.\nPadding.\nPadding.\nPadding.\nParent gadget agent.\nThe position of the squad marker.\nThe position.\nPrevious weapon set.\nAgent profession.\nRange or radius depending on the missile’s motion.\nKind of buff remove.\nRemoved buff(s) as duration.\nRemoved buff(s) as intensity.\nProbably resistance.\nResult of buff damage.\nCombat result.\nReward id.\nEffect scale.\nScaled activation duration.\nServer Unix timestamp.\nDamage inflicted to shields (barrier).\nBuff skill id.\nSkill id of the relevant skill (can be zero).\nSkill id of the relevant skill (can be zero).\nAssociated skill id.\nAssociated skill id.\nAssociated skill id.\nId of casted skill.\nSkin id for players.\nSource of the effect.\nSource of the effect.\nSource of the effect.\nSource of the effect.\nAgent that caused the event.\nAgent creating the missile.\nAgent creating the missile.\nMissile speed.\nAgent that caused the event.\nInstance id of source agent as appears in game at time of …\nIf <code>src_agent</code> has a master (e.g. is minion), will be equal …\nStack active status.\nWhether stack is active.\nBuff stack (instance) id.\nBuff stack (instance) id.\nStack id of new active stack.\nStack id.\nBuff stacking behavior.\nNew breakbar state.\nKind of strike.\nAgent subgroup.\nTag id.\nTarget of the effect (if applicable).\nAgent the event happened to.\nTarget of the missile, if set and in range.\nTarget location, if applicable.\nWhether target is currently downed.\nTarget location.\nCurrent targetable state.\nNew targetable state.\nNew team id.\nTime of registering the attack target.\nTime of registering the breakbar state change.\nTime of registering the breakbar health change.\nTime of registering the combat enter.\nTime of registering the gliding state.\nTime of registering the max health change.\nTime of registering the health percent change.\nTime of registering the barrier change.\nTime of registering the status change.\nTime of registering the downed state.\nTime of registering the stunbreak.\nTime of registering the targetable state change.\nTime of registering the team change.\nTime of registering the active buff stack change.\nTime of registering the stack reset.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the effect.\nTime of registering the event.\n<code>timeGetTime()</code> at time of registering the event.\nTime of registering the event.\nTime of registering the event.\nTime of registering the event.\nTime of registering the missile.\nTime of registering the missile.\nTime of registering the missile.\nTime of registering the event.\nTime of registering the reward.\nTime of registering the event.\nTime of registering the position.\nTime of registering the activation.\nTime of registering the weapon swap.\nTime since last 90% HP in milliseconds.\nTotal damage inflicted.\nTrackable id for effect end.\nTrackable id for effect remove.\nTrackable id for effect remove.\nTrackable id for effect remove.\nTrackable id for effect remove.\nTrackable id to identify missile in other events.\nTrackable id to identify missile in other events.\nTrackable id to identify missile in other events.\nValue, if relevant to the event.\nNew weapon set.\nForcefully extracts information from a combat event.\nAttempts to extract information from a combat event.\nChecks whether <code>Self</code> can be extracted from the event.\nExtracts <code>Self</code> from the combat event.\nAttempts to extract <code>Self</code> from the combat event.\nAgent has a marker.\nSquad marker.\nSquad (ground) marker placed or removed.\nAn iterator over the variants of SquadMarker\nAgent that has the marker.\nNon-zero if commander.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarker id.\nThe squad marker that was modified.\nThe position of the squad marker.\nTime of registering the event.\nTime of registering the event.\nMissile created.\nMissile flags on launch.\nMissile created.\nMissile created.\nRelated agent.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nCurrent location.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nMissile flags on launch.\nTotal friendly fire damage.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nWhether at least one enemy was hit along the way.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nMissile location.\nMissile motion type.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nRange or radius depending on the missile’s motion.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nAssociated skill id.\nAssociated skill id.\nAssociated skill id.\nSkin id for players.\nAgent creating the missile.\nAgent creating the missile.\nMissile speed.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTarget of the missile, if set and in range.\nTarget location.\nTime of registering the missile.\nTime of registering the missile.\nTime of registering the missile.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTrackable id to identify missile in other events.\nTrackable id to identify missile in other events.\nTrackable id to identify missile in other events.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nAgent is in guild.\nPlayer profession.\nAn iterator over the variants of Profession\nReward chest received.\nPlayer specialization.\nAn iterator over the variants of Specialization\nAgent has a tag.\nUnknown or invalid.\nUnknown or invalid.\nAgent that is in guild.\nAgent that is self.\nAgent that has the tag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuild id in GW2 API form.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReward id.\nTag id.\nTime of registering the event.\nTime of registering the reward.\nTime of registering the event.\nPositional information.\nPositional information for an agent.\nAgent who changed position.\nThe position.\nTime of registering the position.\nSkill activation (cast).\nActivation (skill cast) event.\nAn iterator over the variants of Activation\nSkill animation stop (UNOFFICIAL).\nAn iterator over the variants of AnimationStop\nStopped skill activation without reaching tooltip time.\nStopped skill activation with reaching tooltip time.\nArcDPS custom skill ids.\nNot used, different kind of event.\nUnused as of 5th November 2019.\nAnimation completed fully.\nSkill information from an <code>Event</code> with <code>StateChange::SkillInfo</code>…\nSkill timing from an <code>Event</code> with <code>StateChange::SkillTiming</code>.\nStarted skill/animation activation.\nUnknown or invalid.\nUnknown or invalid.\nKind of activation state change.\nAgent casting the skill.\nActivation duration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nScaled activation duration.\nId of casted skill.\nTarget location, if applicable.\nTime of registering the activation.\nStrike was absorbed.\nOn-skill-activation event.\nStrike missed.\nStrike was blocked.\nSkill dealt breakbar damage.\nStrike was critical.\nSkill crowd controlled the target.\nSkill downed the target.\nStrike was evaded.\nStrike was glancing.\nStrike interrupted something.\nSkill killed the target.\nNormal damage strike.\nStrike types.\nStrike (direct damage) event.\nAn iterator over the variants of Strike\nUnknown.\nCommon combat event information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDamage inflicted to shields (barrier).\nKind of strike.\nWhether target is currently downed.\nTotal damage inflicted.\nBundle or kit weapon set.\nFirst land weapon set.\nSecond land weapon set.\nTransform weapon set.\nUnknown.\nFirst underwater weapon set.\nSecond underwater weapon set.\nAgent weapon set.\nAn iterator over the variants of WeaponSet\nActive weapon set changed.\nAgent that swapped weapon sets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrevious weapon set.\nTime of registering the weapon swap.\nNew weapon set.\nResult of an <code>add_extension</code> operation.\nAn iterator over the variants of AddExtensionResult\nArcDPS color type.\nCurrent ArcDPS color settings.\nArcDPS core UI color.\nExtension-specific error.\nImGui version did not match.\nFailed to load extension module with <code>LoadLibrary</code>.\nCurrent ArcDPS modifier keybinds as virtual key ids.\nExtension did not provide callback function table.\nExtension did not provide an <code>init</code> function.\nObsolete ArcDPS module.\nExtension was loaded successfully.\nAn extension with the same <code>sig</code> already exists.\nCurrent ArcDPS UI settings.\nAdds an <code>Event</code> to ArcDPS’ event processing.\nAdds an <code>Event</code> to ArcDPS’ event processing.\nRequests to load an extension (plugin/addon).\nWhether windows should close with the <code>ESC</code> key.\nRetrieves the color settings from ArcDPS.\nRetrieves the config path from ArcDPS.\nReturns the base color for a specific <code>CoreColor</code>.\nWhether the UI is always drawn.\nRequests to free a loaded extension (plugin/addon).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks whether export <code>addextension2</code> was found.\nChecks whether export <code>e0</code> was found.\nChecks whether export <code>e10</code> was found.\nChecks whether export <code>e3</code> was found.\nChecks whether export <code>e5</code> was found.\nChecks whether export <code>e6</code> was found.\nChecks whether export <code>e7</code> was found.\nChecks whether export <code>e8</code> was found.\nChecks whether export <code>e9</code> was found.\nChecks whether export <code>freeextension2</code> was found.\nChecks whether export <code>listextension</code> was found.\nWhether the UI is hidden.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLogs a message to ArcDPS’ log file <code>arcdps.log</code>.\nLogs a message to ArcDPS’ logger window.\nVirtual key id of the first modifier used by ArcDPS.\nVirtual key id of the second modifier used by ArcDPS.\nVirtual key id of the “multi” modifier used by ArcDPS.\nRetrieves the modifier keybinds from ArcDPS.\nWhether pressing the modifiers are required to click …\nWhether pressing the modifiers are required to move …\nReturns the base color for a specific <code>Profession</code>.\nReturns the highlight color for a specific <code>Profession</code>.\nRaw ArcDPS exports.\nReturns the base color for a specific subgroup.\nReturns the highlight color for a specific subgroup.\nRetrieves the UI settings from ArcDPS.\nRetrieves the ArcDPS version as string.\nSignature of the <code>e0</code> export. See <code>e0_config_path</code> for details.\nSignature of the <code>e10</code> export. See <code>e10_add_event_combat</code> for …\nSignature of the <code>e3</code> export. See <code>e3_log_file</code> for details.\nSignature of the <code>e5</code> export. See <code>e5_colors</code> for details.\nSignature of the <code>e6</code> export. See <code>e6_ui_settings</code> for details.\nSignature of the <code>e7</code> export. See <code>e7_modifiers</code> for details.\nSignature of the <code>e8</code> export. See <code>e8_log_window</code> for details.\nSignature of the <code>e9</code> export. See <code>e9_add_event</code> for details.\nSignature of the <code>addextension2</code> export. See <code>add_extension</code> …\nSignature of the <code>freeextension2</code> export. See <code>free_extension</code> …\nSignature of the <code>listextension</code> export. See <code>list_extension</code> …\nRequests to load an extension (plugin/addon).\nRetrieves path to ArcDPS ini config file as wide char …\nAdds an <code>Event</code> to ArcDPS’ event processing.\nLogs a string to <code>arcdps.log</code> file.\nWrites color array pointers to buffer.\nRetrieves bit mask of current ArcDPS UI settings.\nRetrieves modifier keys as virtual key codes.\nLogs a string to the ArcDPS logger window.\nAdds an <code>Event</code> to ArcDPS’ event processing.\nRequests to free a loaded extension (plugin/addon).\nReturns the handle to the ArcDPS dll.\nRetrieves a list of extensions via callback.\nSupported Unofficial Extras API version.\nInformation about the Unofficial Extras addon.\nInformation about a subscriber to updates from Unofficial …\nSubscriber header shared across different versions.\nHelper for version checks.\nMaximum supported [<code>ExtrasSubscriberInfo</code>] version.\nMinimum [<code>ExtrasSubscriberInfo</code>] version for message …\nMinimum [<code>ExtrasSubscriberInfo</code>] version for message …\nMinimum supported [<code>ExtrasSubscriberInfo</code>] version.\nRange of supported [<code>ExtrasSubscriberInfo</code>] versions.\nVersion of the API.\nVersion of the API.\nVersion of the API.\nUnofficial extras callback types.\nCalled on different chat messages.\nUnofficial Extras exports.\nThe handle to the Unofficial Extras module.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nChecks for compatibility and returns the highest supported …\nHeader shared across different versions.\nThe version of the following info struct. This has to be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks compatibility with the Unofficial Extras addon.\nCalled whenever a keybind is changed.\nKeybind information provided by Unofficial Extras.\nCalled whenever the language is changed.\nHighest known version of the [<code>ExtrasSubscriberInfo</code>] struct.\nHighest known version of the <code>ExtrasSubscriberInfo</code> struct.\nHighest known version of the <code>ExtrasSubscriberInfo</code> struct.\nMessage information provided by Unofficial Extras.\nCreates new version information.\nAccount name of the logged-in player, including leading <code>&#39;:&#39;</code>…\nCalled whenever a chat message is sent in your party/squad.\nCalled whenever anything in the squad changes.\nString version of the Unofficial Extras addon.\nString version of the Unofficial Extras addon.\nSubscribes to unofficial extras callbacks after checking …\nName of the addon subscribing to the changes.\nWhether the Unofficial Extras addon supports chat message …\nWhether the Unofficial Extras addon supports squad chat …\nUnused padding.\nUser information provided by Unofficial Extras.\nReturns the corresponding <code>ExtrasVersion</code>.\nReturns the corresponding <code>ExtrasVersion</code>.\nRetrieves the <code>Key</code> for a given game <code>Control</code> from Unofficial …\nRetrieves the <code>Keybind</code> for a given game <code>Control</code> from …\nChecks whether the <code>get_key</code> export was found.\nChecks whether the <code>get_keybind</code> export was found.\nRaw Unofficial Extras exports.\nRetrieves the Unofficial Extras version as string.\nSignature of the <code>get_key</code> export.\nSignature of the <code>get_keybind</code> export.\nRetrieves the <code>RawKey</code> for a given game <code>Control</code> from …\nRetrieves the <code>RawKeybind</code> for a given game <code>Control</code> from …\nReturns the handle to the Unofficial Extras dll.\nA control (player action) used by the game.\nAn iterator over the variants of Control\nDevice type.\nAn iterator over the variants of DeviceType\nA key used by the game.\nA keyboard key.\nCustom key codes.\nAn iterator over the variants of KeyCode\nA keybind used by the game.\nKeybind change event.\nKey modifiers.\nAn iterator over the variants of Modifier\nA mouse button.\nCustom mouse codes.\nAn iterator over the variants of MouseCode\nRaw key information.\nRaw keybind.\nRaw keybind change.\nAn unknown type of key.\nKey code.\nGame control which changed.\nGame control which changed.\nDevice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndex in settings.\nIndex in settings.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNew key.\nNew key.\nWhether the Alt modifier is used.\nWhether the Ctrl modifier is used.\nWhether the Shift modifier is used.\nKey modifiers.\nPrimary <code>Key</code> for this bind.\nPrimary keybind.\nSecondary <code>Key</code> for this bind.\nSecondary keybind.\nType of message channel.\nAn iterator over the variants of ChannelType\nMessage is a broadcast.\nA chat message.\nType of message.\nAn iterator over the variants of MessageType\nNPC message (selectable in ingame-chat as “NPC”).\nAn NPC chat message.\n<code>NpcMessage</code> with owned <code>String</code> fields.\nA chat message.\nParty or squad chat message.\nA squad/party chat message.\nSquad message flags.\n<code>SquadMessage</code> with owned <code>String</code> fields.\nReturns the account name of the player that sent the …\nAccount name of the player that sent the message.\nReturns the account name length.\nReturns the account name as raw pointer.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nA unique identifier for the channel this chat message was …\nA unique identifier for the channel this chat message was …\nWhether the message is sent in a party or a squad.\nWhether the message is sent in a party or a squad.\nReturns the character name of the player that sent the …\nReturns the character name of the player that sent the …\nCharacter name of the NPC that sent the message.\nCharacter name of the player that sent the message.\nReturns the account name length.\nReturns the account name length.\nReturns the character name as raw pointer.\nReturns the character name as raw pointer.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the message flags.\nWhether the message is a broadcast.\nReturns the raw message flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns the message flags.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nCreates a new message from [<code>RawMessageType</code>] and <code>RawMessage</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe subgroup the message was sent to, or <code>0</code> if it was sent …\nThe subgroup the message was sent to, or <code>0</code> if it was sent …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the text content of the message.\nReturns the text content of the message.\nContent of the message.\nContent of the message.\nReturns the account name length.\nReturns the account name length.\nReturns the text as raw pointer.\nReturns the text as raw pointer.\nReturns the timestamp when the message was received.\nTime since epoch in nanoseconds.\nTimestamp when the message was received.\nReturns the timestamp string length.\nReturns the timestamp string as raw pointer.\nReturns the timestamp as string.\nConverts the message to its owned counterpart.\nConverts the squad message to its owned counterpart.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUser has requested to join.\nInternal only.\nUser is invited.\nUser is lieutenant.\nUser is regular member.\nUser has left.\nUser is leader (commander tag).\nInformation about a player related to the squad.\nIterator over changed users.\n<code>UserInfo</code> with an owned <code>String</code> name.\nRole of a user in the squad.\nAn iterator over the variants of UserRole\nUnused space.\nUnused space.\nReturns the user account name without leading <code>&#39;:&#39;</code>.\nAccount name, without leading ‘:’.\nReturns the raw pointer to the user account name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnix timestamp when the user joined the squad.\nUnix timestamp when the user joined the squad.\nWhether this player is ready or not (in a squad ready …\nWhether this player is ready or not (in a squad ready …\nRole in squad, or <code>UserRole::None</code> if the user was removed …\nRole in squad, or <code>UserRole::None</code> if the user was removed …\nSubgroup the user is in.\nSubgroup the user is in.\nConverts the <code>UserInfo</code> to the owned version <code>UserInfoOwned</code>.\nHelper to generate an iterator over <code>UserInfo</code> structs.\nA logger logging to ArcDPS’ log window and/or file.\nA logger logging to ArcDPS’ log file.\nA logger logging to ArcDPS’ log window.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new ArcDPS logger.\nCreates a new window logger.\nCreates a new file logger.")