window.SIDEBAR_ITEMS = {"enum":[["CompareResult","Indicates whether a comparison was successful, an error, or if more data was needed"]],"struct":[["Located","Allow collecting the span of a parsed token"],["Stateful","Thread global state through your parsers"],["Streaming","Mark the input as a partial buffer for streaming input."]],"trait":[["AsBytes","Helper trait for types that can be viewed as a byte slice"],["AsChar","Transforms common types to a char for basic token parsing"],["Compare","Abstracts comparison operations"],["ErrorConvert","Equivalent From implementation to avoid orphan rules in bits parsers"],["ExtendInto","Abstracts something which can extend an `Extend`. Used to build modified input slices in `escaped_transform`"],["FindSubstring","Look for a substring in self"],["FindToken","Check if a token in in a set of possible tokens"],["HexDisplay","Helper trait to show a byte slice as a hex dump"],["InputIsStreaming","Marks the input as being the complete buffer or a partial buffer for streaming input"],["InputIter","Abstracts common iteration operations on the input type"],["InputLength","Abstract method to calculate the input length"],["InputTake","Abstracts slicing operations"],["InputTakeAtPosition","Methods to take as much input as possible until the provided function returns true for the current element."],["IntoOutput","Convert an `Input` into an appropriate `Output` type"],["Location","Number of indices input has advanced since start of parsing"],["Offset","Useful functions to calculate the offset between slices and show a hexdump of a slice"],["ParseTo","Used to integrate `str`â€™s `parse()` method"],["Slice","Slicing operations using ranges."],["ToUsize","Helper trait to convert numbers to usize."],["UnspecializedInput","Dummy trait used for default implementations (currently only used for `InputTakeAtPosition` and `Compare`)."]]};